---

- name: Configure Verifier
  hosts: keylime_verifier
  become: true
  pre_tasks:
    - name: Probe python installation
      raw: command -v python3 || true
      changed_when: false
      register: python_available
    - name: Bootstrap a host without python installed
      raw: dnf install python3 python3-libselinux
      when: "'python' not in python_available.stdout"
  roles:
    - role: keylime_mTLS_setup
      vars:
        keylime_rootca_cert: "{{ playbook_dir }}/CA/cacert.crt"
        keylime_cert_dest: /var/lib/keylime/cv_ca
        keylime_cert_patterns: 
          - "{{ playbook_dir }}/CA/server*"
          - "{{ playbook_dir }}/CA/client*"
  tasks:
    - name: Set Keylime verifier environment variables for root user
      blockinfile:
        path: /root/.bashrc
        marker: "# {mark} KEYLIME VERIFIER ENV VARS"
        block: |
          export KEYLIME_VERIFIER_IP="192.168.33.12"
          export KEYLIME_VERIFIER_PORT="8881"
          export KEYLIME_VERIFIER_REGISTRAR_IP="192.168.33.11"
          export KEYLIME_VERIFIER_REGISTRAR_PORT="8891"
          export KEYLIME_VERIFIER_TLS_DIR="/var/lib/keylime/cv_ca"
          export KEYLIME_VERIFIER_SERVER_KEY="server-private.pem"
          export KEYLIME_VERIFIER_SERVER_CERT="server-cert.crt"
          export KEYLIME_VERIFIER_TRUSTED_CLIENT_CA="['cacert.crt']"
          export KEYLIME_VERIFIER_CLIENT_KEY="client-private.pem"
          export KEYLIME_VERIFIER_CLIENT_CERT="client-cert.crt"
          export KEYLIME_VERIFIER_TRUSTED_SERVER_CA="['cacert.crt']"

- name: Configure Registrar
  hosts: keylime_registrar
  become: true
  pre_tasks:
    - name: Probe python installation
      raw: command -v python3 || true
      changed_when: false
      register: python_available
    - name: Bootstrap a host without python installed
      raw: dnf install python3 python3-libselinux
      when: "'python' not in python_available.stdout"
  roles:
    - ansible-keylime
    - role: keylime_mTLS_setup
      vars:
        keylime_rootca_cert: "{{ playbook_dir }}/CA/cacert.crt"
        keylime_cert_dest: /var/lib/keylime/cv_ca
        keylime_cert_patterns: 
          - "{{ playbook_dir }}/CA/server*"
  tasks:
    - name: Set Keylime registrar environment variables for root user
      blockinfile:
        path: /root/.bashrc
        marker: "# {mark} KEYLIME REGISTRAR ENV VARS"
        block: |
          export KEYLIME_REGISTRAR_IP="192.168.33.11"
          export KEYLIME_REGISTRAR_PORT="8890"
          export KEYLIME_REGISTRAR_TLS_PORT="8891"
          export KEYLIME_REGISTRAR_TLS_DIR="/var/lib/keylime/cv_ca"
          export KEYLIME_REGISTRAR_SERVER_KEY="server-private.pem"
          export KEYLIME_REGISTRAR_SERVER_CERT="server-cert.crt"
          export KEYLIME_REGISTRAR_TRUSTED_CLIENT_CA="cacert.pem"

- name: Configure Tenant
  hosts: keylime_tenant
  become: true
  pre_tasks:
    - name: Probe python installation
      raw: command -v python3 || true
      changed_when: false
      register: python_available
    - name: Bootstrap a host without python installed
      raw: dnf install python3 python3-libselinux
      when: "'python' not in python_available.stdout"
  roles:
    - ansible-keylime
    - role: keylime_mTLS_setup
      vars:
        keylime_rootca_cert: "{{ playbook_dir }}/CA/cacert.crt"
        keylime_cert_dest: /var/lib/keylime/cv_ca
        keylime_cert_patterns: 
          - "{{ playbook_dir }}/CA/client*"
  tasks:
    - name: Set Keylime tenant environment variables for root user
      blockinfile:
        path: /root/.bashrc
        marker: "# {mark} KEYLIME TENANT ENV VARS"
        block: |
          export KEYLIME_TENANT_VERIFIER_IP="192.168.33.12"
          export KEYLIME_TENANT_VERIFIER_PORT="8881"
          export KEYLIME_TENANT_REGISTRAR_IP="192.168.33.11"
          export KEYLIME_TENANT_REGISTRAR_PORT="8891"
          export KEYLIME_TENANT_TPM_CERT_STORE="/var/lib/keylime/tpm_cert_store"
          export KEYLIME_TENANT_TRUSTED_SERVER_CA="['cacert.crt']"
          export KEYLIME_TENANT_CLIENT_KEY="client-private.pem"
          export KEYLIME_TENANT_CLIENT_CERT="client-cert.crt"    

- name: Inject swtpm issuer certificate into tenant
  hosts: keylime_tenant  # Or split into separate groups for agent and tenant if needed
  become: true
  vars:
    swtpm_enabled: true  # Set to false to disable swtpm-related tasks
  tasks:
    # Step 2: Tenant â€” Copy cert to the tenant's TPM store (only if swtpm_enabled is true)
    - name: Ensure TPM cert store exists on tenant
      file:
        path: /var/lib/keylime/tpm_cert_store
        state: directory
        mode: '0755'
      when: swtpm_enabled

    - name: Copy the issuer cert from control to tenant (if swtpm_enabled is true)
      copy:
        src: "{{ playbook_dir }}/CA/issuer_cert.pem"  # Path from the control machine (after fetching)
        dest: /var/lib/keylime/tpm_cert_store/issuer_cert.pem
        mode: '0644'
      when: swtpm_enabled

